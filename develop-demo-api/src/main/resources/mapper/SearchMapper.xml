<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="demo.api.dao.SearchDao">
    <select id="selectCustomerMostSumPerYear" resultType="demo.api.entity.CustomerMostSum">
	<![CDATA[
		SELECT
			res.year
			, res.name
			, res.acctNum
			, res.sumAmt
		FROM
			(
				SELECT
					sub.year
					, sub.name
					, sub.acctNum
					, sub.sumAmt
					, case sub.year
						when @groupyear then @rownum := @rownum+1
						else @rownum := 1
					  end as ranking
					, @groupyear := sub.year
				FROM
					(
						SELECT
							left(d_info.deal_date, 4) as year
							, a_info.account_name  as name
							, d_info.account_number as acctNum
							, sum(d_info.amount - d_info.tax) as sumAmt
						FROM
							dev.deal_info as d_info
								inner join dev.account_info as a_info
									on d_info.account_number = a_info.account_number
						WHERE
							d_info.cancel <> 'Y'
								AND
							(@rownum:=0)=0
						GROUP BY
							year, name, acctNum
					) as sub
				ORDER BY year ASC, sumAmt DESC
			) as res
		WHERE
			res.ranking = '1'
		GROUP BY
			res.year, res.acctNum
	]]>
    </select>
 
    <select id="selectCustomerNoDealing" resultType="demo.api.entity.CustomerNoDealing">
		SELECT
			sub.year as year
		    , main.account_name as name
		    , main.account_number as acctNum
		FROM
			account_info main
			LEFT JOIN (
					SELECT
						left(d_info.deal_date, 4) as year
						, a_info.account_number as acctNum
						, sum(if(d_info.cancel = 'N', 1, 0)) as cancelCount
					FROM
						dev.account_info as a_info
							left join dev.deal_info as d_info
								on a_info.account_number = d_info.account_number
					GROUP BY
						year, acctNum
			) as sub
				on main.account_number = sub.acctNum
		WHERE
			sub.cancelCount = 0
		ORDER BY
			sub.year
    </select>

    <select id="selectTargetYear" resultType="string">
    	SELECT DISTINCT 
    		left(deal_date, 4) 
    	FROM 
    		dev.deal_info;
    </select>

    <select id="selectBranchSumPerYear" parameterType="string" resultType="demo.api.entity.BranchInfo">
    <![CDATA[
        SELECT
        	b_info.branch_name as brName
        	, b_info.branch_code as brCode
        	, sum(d_info.amount - d_info.tax) as sumAmt
		FROM
			dev.branch_info b_info
				inner join dev.account_info a_info
					on b_info.branch_code = a_info.branch_code
				inner join dev.deal_info d_info
					on a_info.account_number = d_info.account_number
		WHERE
			left(d_info.deal_date, 4) = #{year}
				AND
			d_info.cancel <> 'Y'
		GROUP BY
			b_info.branch_name, b_info.branch_code
		ORDER BY
			sumAmt DESC
	]]>
    </select>

    <select id="selectCodeAndNameOfBranch" parameterType="string" resultType="string">
		SELECT
        	b_info.branch_code as brCode
		FROM
			dev.branch_info b_info
		WHERE 
	    	b_info.branch_name =  #{brName}
    </select>

    <select id="selectSumAmtOfBranch" parameterType="list" resultType="long">
		SELECT
		    sum(d_info.amount - d_info.tax) as sumAmt
		FROM
			dev.branch_info b_info
				inner join dev.account_info a_info
					on b_info.branch_code = a_info.branch_code
				inner join dev.deal_info d_info
					on a_info.account_number = d_info.account_number
		WHERE 
			b_info.branch_name in (
			<foreach collection="list" item="item" index="index" separator=",">
				#{item}
			</foreach>
			) 
				AND
		    <![CDATA[
			d_info.cancel <> 'Y'
			]]>
    </select>
</mapper>